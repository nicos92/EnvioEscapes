<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIAAFBQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAgAAAAIAgGAAAAc3p69AAABMxJ
        REFUeJzFV1lIZFcQfe77ioobKioY9wUJIqIicQMVRRGC5MtR8EvNj8ZW/NJx+3BBQmiXCIIRd6Pihg4q
        GMVIBKE/dHTsmIERdeLa2rFTqbrhPXp5/WdeCi68e+veW/VqOVWX4wzpS0dHx/bg4ODFkJAQha+v70cX
        F5fPVlZWz8gDsWFubn6H/AtLS8v3ZmZmv+LaEg45DhmOb+hOETkGlOzu7q6kC+3s7CA5ORkKCwuhrKwM
        6urqoK2tDfr7+2FqagrW19eFsbq6CuPj4zA4OAjd3d3Q1NQE1dXVkJeXB+Hh4RpbW1sN3WlhYfHs4eHx
        C36XiAkPp03Z2dmws7MDr01KpRLm5+dBJpMBWvcFLUWKOAjSPT0915OSkl5dsBjd3d1BTEyMytraukvb
        ArCwsCCJAkQbGxvkEjUvPIkUeHx8lEwBjUZDcUax8RXn7e39NiwsTDLhPGVkZADGgozz9/dfzM/Pl1yB
        yspKwKz4ifPz89svLy+XXIHm5mZwc3PbpQw4bWhoEN10cHCgk/M0dnd3Ge/p6cmA9/DwIJylaNfn0xpP
        fX19FAd/cE5OTpc9PT06gl9eXqC2thZMTEwMUC8nJwdOT08JZAx4aWlp7Ozh4SEEBQUZ8DMzM1kAEo2O
        jlIm3HM2Njb3Q0NDOgrMzMyIQi4NQrqsrCyj/Ovra4iPjxflmZqagkqlYjIIURG2nzjEcNXIyIiOAvT3
        /KGKigpobGwUhkKhAKwNjBcQEMDW8CfYPDIykqUz1gY2x3rC+LwlEYAEGXNzc7T+wmEqPE9MTOgokJqa
        Kmi8srKi48fj42NBOaoRFAu8cpOTk7C1tSXwa2pq4PLyElJSUthob28XZCwvL/P7OKYNT+QjhElRE4aG
        hjIhYryOjg52nooWvzY7Oysa3ERUxAQFFhcXBcbe3p5R/5aWloJarYbY2FgDHgYU3NzcQEFBgbB2e3tr
        VIGlpaV/96EfNFSpeKKM0Bao7f/t7W2G4+SK/f19tj8xMZHtdXZ2ZnNMazbn0bWzs5Od7erq0lGArIMu
        /ovDSHymiOSppKREUIDMre3/i4sLgUf9AsUHH3AErWdnZwKfMoV+jJ/roy0FPsbfHYeme6Cc5IkiW8z8
        tE5aG3NPfX09u9QYv6WlRUcBuVxOsfaJ0vBmeHhYYMTFxYleQJYhF1Bm6PMo3Y6OjphFxM5GRUXB+fm5
        jgLkGnt7+w8ERFcDAwMCgzZq+50fm5ubjE8gpb1OmH5/fy+cJ2tq81tbW1mq6hMBGnZHhwTFSv0AkYKo
        b0RAe0fF6Dfq1aSmoqIiUuBHKsdL/0c5TkhIoAz6jvPx8ZETeEhN2IlRS/Y1h317GUGslHR1dcVnCD0H
        uC9oQjAqFU1PTwP+uIrjCQHhube3VzIFiouLAV9ha4ICOPnBy8vrb2om/ms6OTnhzZ/GaZEL4vKVg4MD
        q+FkImq7XpPo5+htiY2oGs0/xYmQk6urqxxz808eQumRGhERAbm5uVBVVcXQix6g9BAdGxtjZVy/8aSx
        trbG9hC+0CM1MDCQ3Yd3f8Q7vxUTrk/2OBKxb38THR39PTaYP6ObdhE1FXjBB6wfn+hJro33aMFHtOBn
        LMu/448c4LN+HWvAcHp6+ltsYDNxj52YoH8Al4AiHsCF3bQAAAAASUVORK5CYII=
</value>
  </data>
</root>